{"version":3,"sources":["../../lib/Menu/MenuBuilder.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AACb,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7B,IAAI,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC3D,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC;;;;;AAAA;IAK3B,WAAW;WAAX,WAAW;0BAAX,WAAW;;;eAAX,WAAW;;;;;;;;0BAOT,QAAQ,EAAC;;AAEb,aAAO,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,EAAE,CAChD,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAClB,OAAO,CAAC,EAAE,MAAM,EAAG,QAAQ,EAAE,CAAC,CAC9B,QAAQ,CAAC,OAAO,CAAC,CACjB,IAAI,EAAE,CAAC,CACP,IAAI,CAAC,UAAS,IAAI,EAAC;AAClB,YAAI,UAAU,GAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEjC,eAAO,UAAU,CAAC;OACnB,CAAC,CAAC;KACN;;;SAnBG,WAAW;;;AAuBjB,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"MenuBuilder.js","sourcesContent":["'use strict';\nvar Menu = require('./Menu');\nvar KeystoneHelper = require('../Keystone/KeystoneHelper');\nvar Promise = require('bluebird')\n\n/**\n * A builder class used to builder an instance of Menu from the MongoDB\n */\nclass MenuBuilder {\n\n  /**\n   * Get and initialize a Menu instance based on a given name\n   * @param  {String} menuName The name to find a menu by. ex. \"subNav\"\n   * @return {Menu} The menu object that maps to that name\n   */\n  build(menuName){\n    // get and create menu instance\n    return Promise.resolve(KeystoneHelper.getKeystone()\n      .list('Menu').model\n      .findOne({ 'name' : menuName })\n      .populate('items')\n      .exec())\n      .then(function(menu){\n        var menuObject =  new Menu(menu);\n\n        return menuObject;\n      });\n  }\n\n}\n\nmodule.exports = MenuBuilder;\n"]}